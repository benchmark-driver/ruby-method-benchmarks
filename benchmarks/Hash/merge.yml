---
benchmark:
- name: Hash#merge(other)
  script: |-
    h1 = hash1.dup
    h2 = hash2.dup
    h1.merge(h2)
  prelude: |-
    hash1 = { "a" => 100, "b" => 200 }
    hash2 = { "b" => 254, "c" => 300 }
- name: Hash#merge(other) { |key, self_val, other_val| ...}
  script: |-
    h1 = hash1.dup
    h2 = hash2.dup
    h1.merge(h2) { |key, self_val, other_val| other_val }
  prelude: |-
    hash1 = { "a" => 100, "b" => 200 }
    hash2 = { "b" => 254, "c" => 300 }
- name: Hash#merge!(other)
  script: |-
    h1 = hash1.dup
    h2 = hash2.dup
    h1.merge!(h2)
  prelude: |-
    hash1 = { "a" => 100, "b" => 200 }
    hash2 = { "b" => 254, "c" => 300 }
- name: Hash#merge!(other) { |key, self_val, other_val| ...}
  script: |-
    h1 = hash1.dup
    h2 = hash2.dup
    h1.merge!(h2) { |key, self_val, other_val| other_val }
  prelude: |-
    hash1 = { "a" => 100, "b" => 200 }
    hash2 = { "b" => 254, "c" => 300 }
- name: Hash#update(other)
  script: |-
    h1 = hash1.dup
    h2 = hash2.dup
    h1.update(h2)
  prelude: |-
    hash1 = { "a" => 100, "b" => 200 }
    hash2 = { "b" => 254, "c" => 300 }
- name: Hash#update(other) { |key, self_val, other_val| ...}
  script: |-
    h1 = hash1.dup
    h2 = hash2.dup
    h1.update(h2) { |key, self_val, other_val| other_val }
  prelude: |-
    hash1 = { "a" => 100, "b" => 200 }
    hash2 = { "b" => 254, "c" => 300 }
